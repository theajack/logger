{
  "version": 3,
  "sources": ["../../src/common/utils.ts", "../../src/common/t-log.ts", "../../src/common/base-info.ts", "../../src/common/db-base.ts", "../../src/worker/dist/worker.min.ts", "../../src/filter-json/func-filter.ts", "../../src/store/worker-store.ts", "../../src/filter-json/filter.ts", "../../src/store/storage.ts", "../../src/version.ts", "../../src/logger.ts", "../../src/index.ts", "index.ts"],
  "sourcesContent": ["import {IJson, ILogDBData} from 'src/type';\n\n/*\n * @Author: tackchen\n * @Date: 2022-07-24 16:27:54\n * @Description: Coding something\n */\nexport function uuid () {\n  const s: string[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i < 36; i++) s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n\n  s[14] = '4';  // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr(((s[19] as any) & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = '-';\n  s[13] = '-';\n  s[18] = '-';\n  s[23] = '-';\n  const uuid = s.join('');\n  return uuid;\n}\n \nexport function transformDOM (value: HTMLElement) {\n  const attributes = value.attributes;\n  let attrs = '';\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    attrs += ` ${attr.name}=\"${attr.value}\"`;\n  }\n  return `<${value.tagName.toLowerCase()}${attrs}/>`;\n}\n\nexport function toLogString (value: any): string {\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  } else {\n    return value.toString();\n  }\n}\n\nexport function dateToStr (date: Date, comm = ':'): string {\n  const dateStr = `${date.getFullYear()}-${fn(date.getMonth() + 1)}-${fn(date.getDate())}`;\n  const ms = date.getMilliseconds();\n  const msStr = ms < 100 ? `0${fn(ms)}` : ms;\n  return `${dateStr} ${fn(date.getHours())}${comm}${fn(date.getMinutes())}${comm}${fn(date.getSeconds())}${comm}${msStr}`;\n}\n\nfunction fn (num: number) {\n  return num < 10 ? (`0${num}`) : num;\n}\n\nexport function codeToBlob (code: string) {\n  const blob = new window.Blob([code], {type: 'text/javascript'}); // \u751F\u6210js\u6587\u4EF6\u5BF9\u8C61\n  const objectURL = window.URL.createObjectURL(blob); // \u751F\u6210js\u6587\u4EF6\u7684url\n  return objectURL;\n}\n\nconst DefaultKeys = [\n  'type', 'msg', 'payload', 'uid', 'traceid',\n  'logid', 'duration', 'network', 'url', 'ua'\n];\n\nexport function dataToLogString (data: ILogDBData, keys: string[] = []) {\n  let content = `[${data.time}]`;\n  const append = (key: string) => {\n    const v = (data as IJson)[key];\n    if (typeof v !== 'undefined' && v !== '') {\n      content += ` ${key}=${toLogString(v)};`;\n    }\n  };\n  for (const key of keys) {\n    append(key);\n  }\n  for (const key of DefaultKeys) {\n    if (!keys.includes(key)) {\n      append(key);\n    }\n  }\n  return content;\n}\n\nexport function download ({\n  name,\n  content,\n  type = 'text/plain'\n}: {\n    name: string;\n    content: string;\n    type?: string;\n}) {\n  const downloadLink = document.createElement('a');\n  downloadLink.setAttribute('style', 'position: fixed;top: -100px');\n  document.body.appendChild(downloadLink);\n  downloadLink.setAttribute('download', name);\n        \n  const blob = new Blob([content], {type});\n  const url = URL.createObjectURL(blob);\n  downloadLink.href = url;\n  downloadLink.click();\n}\n\nexport function isJson (data: object): boolean {\n  return (\n    typeof data === 'object' &&\n    data.constructor.name === 'Object'\n  );\n}", "/*\n * @Author: tackchen\n * @Date: 2022-08-01 08:03:29\n * @Description: Coding something\n */\n\nimport {TLogType} from 'src/type';\n\n\nconst HEADER = '[TCLogger]:';\n\nfunction logBase (args: any[], type: TLogType) {\n  const first = args[0];\n  if (typeof first === 'string' || typeof first === 'string') {\n    args[0] = HEADER + first;\n  } else {\n    args.unshift(HEADER);\n  }\n  console[type](...args);\n}\n\nexport const TLog = {\n  log (...args: any[]) {\n    logBase(args, 'log');\n  },\n  warn (...args: any[]) {\n    logBase(args, 'warn');\n  },\n  info (...args: any[]) {\n    logBase(args, 'info');\n  },\n  error (...args: any[]) {\n    logBase(args, 'error');\n  }\n};", "import {IBaseInfo, IBaseInfoOption, IBaseInfoParam, IDBConfig, ILogDBData, IMessageData} from '../type';\nimport {TLog} from './t-log';\nimport {dataToLogString, dateToStr, uuid} from './utils';\n\n/*\n * @Author: tackchen\n * @Date: 2022-07-30 13:05:39\n * @Description: Coding something\n */\nexport class BaseInfo {\n  static DEFAULT_DB_NAME_PREFIX = 'tc_logger';\n  name: string;\n\n  durationStart: number;\n\n  data: IBaseInfo = {\n    clientid: '',\n    uid: '',\n    traceid: '',\n    network: '',\n    url: '',\n    ua: '',\n  };\n\n  config: IDBConfig = {\n    useConsole: true,\n    maxRecords: -1,\n  };\n\n  constructor ({\n    id,\n    useConsole,\n    maxRecords\n  }: IBaseInfoParam) {\n    this.injectConfig({useConsole, maxRecords});\n    this.name = `${BaseInfo.DEFAULT_DB_NAME_PREFIX}_${id}`;\n    this.refreshTraceId();\n  }\n\n  refreshTraceId () {\n    this.data.traceid = uuid();\n    this.refreshDurationStart();\n  }\n  refreshDurationStart () {\n    this.durationStart = Date.now();\n  }\n  injectBaseInfo (baseInfo: IBaseInfoOption) {\n    Object.assign(this.data, baseInfo);\n  }\n    \n  injectConfig (data: Pick<IBaseInfoParam, 'useConsole' | 'maxRecords'>) {\n    Object.assign(this.config, data);\n  }\n\n  appendBaseInfo (data: IMessageData): ILogDBData {\n    const date = new Date();\n    const timestamp = date.getTime();\n    const time = dateToStr(date);\n    const duration = timestamp - this.durationStart;\n\n    const extend = data.extend || {};\n    delete data.extend;\n    \n    const result = Object.assign(data, this.data, {\n      timestamp,\n      time,\n      logid: uuid(),\n      duration,\n    }, extend);\n\n    if (this.config.useConsole) {\n      const str = dataToLogString(result);\n      const fn = TLog[result.type] || console.log;\n      fn(str);\n    }\n\n    return result;\n  }\n    \n}", "/*\n * @Author: tackchen\n * @Date: 2022-07-30 13:16:15\n * @Description: Coding something\n */\nimport {IBaseInfoOption, IBaseInfoParam, IDownloadOptions, IJson, ILogDBData, ILogError, IMessageData, TLogStoreType} from '../type';\nimport {BaseInfo} from './base-info';\n\nexport type TFilterOption =\n    (data: ILogDBData) => boolean |\n    IJson |\n    IJson[];\n\nexport interface IDownloadInfo {\n    content: string;\n    count: number;\n}\n\nexport type IAddReturn = {\n    discard: ILogDBData | null;\n    add: ILogDBData;\n} | null\n\nexport abstract class DBBaseMethods {\n  type: TLogStoreType;\n  onReport?: (data: ILogDBData) => void;\n  onDiscard?: (data: ILogDBData) => void;\n  onError?: (err: ILogError) => void;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  constructor (data: IBaseInfoParam) {this.type = 'idb';}\n  abstract add (data?: IMessageData): Promise<IAddReturn>;\n  abstract close(): Promise<boolean>;\n  abstract destory(): Promise<boolean>;\n  abstract get(logid: string): Promise<ILogDBData | null>;\n  abstract download(data: IDownloadOptions): Promise<IDownloadInfo>;\n  abstract filter(filter?: TFilterOption | string): Promise<ILogDBData[]>;\n  abstract getAll(): Promise<ILogDBData[]>;\n  abstract count(): Promise<number>;\n  abstract clear(): Promise<boolean>;\n  abstract delete(logid: string): Promise<boolean>;\n  abstract injectBaseInfo(data: IBaseInfoOption): Promise<void>;\n  abstract refreshTraceId(): Promise<void>;\n  abstract refreshDurationStart(): Promise<void>;\n}\n\nexport abstract class DBBase extends DBBaseMethods {\n\n  baseInfo: BaseInfo;\n\n  useConsole: boolean;\n\n  get name () {\n    return this.baseInfo.name;\n  }\n\n  constructor (data: IBaseInfoParam) {\n    super(data);\n    this.baseInfo = new BaseInfo(data);\n  }\n  injectBaseInfo (data: IBaseInfoOption) {\n    this.baseInfo.injectBaseInfo(data);\n    return Promise.resolve();\n  }\n  refreshTraceId () {\n    this.baseInfo.refreshTraceId();\n    return Promise.resolve();\n  }\n  refreshDurationStart () {\n    this.baseInfo.refreshDurationStart();\n    return Promise.resolve();\n  }\n}", "export default `var module = {}; var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/worker/index.ts\nvar worker_exports = {};\n__export(worker_exports, {\n  default: () => worker_default\n});\nmodule.exports = __toCommonJS(worker_exports);\n\n// src/common/t-log.ts\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.In order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o)\n    return;\n  if (typeof o === \"string\")\n    return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor)\n    n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\")\n    return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null)\n    return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr))\n    return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length)\n    len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nvar HEADER = \"[TCLogger]:\";\nfunction logBase(args, type) {\n  var _console;\n  var first = args[0];\n  if (typeof first === \"string\" || typeof first === \"string\") {\n    args[0] = HEADER + first;\n  } else {\n    args.unshift(HEADER);\n  }\n  (_console = console)[type].apply(_console, _toConsumableArray(args));\n}\nvar TLog = {\n  log: function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    logBase(args, \"log\");\n  },\n  warn: function warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    logBase(args, \"warn\");\n  },\n  info: function info() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    logBase(args, \"info\");\n  },\n  error: function error() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    logBase(args, \"error\");\n  }\n};\n\n// src/common/utils.ts\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray2(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it)\n        o = it;\n      var i = 0;\n      var F = function F2() {\n      };\n      return { s: F, n: function n() {\n        if (i >= o.length)\n          return { done: true };\n        return { done: false, value: o[i++] };\n      }, e: function e(_e) {\n        throw _e;\n      }, f: F };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.In order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true, didErr = false, err;\n  return { s: function s() {\n    it = it.call(o);\n  }, n: function n() {\n    var step = it.next();\n    normalCompletion = step.done;\n    return step;\n  }, e: function e(_e2) {\n    didErr = true;\n    err = _e2;\n  }, f: function f() {\n    try {\n      if (!normalCompletion && it.return != null)\n        it.return();\n    } finally {\n      if (didErr)\n        throw err;\n    }\n  } };\n}\nfunction _unsupportedIterableToArray2(o, minLen) {\n  if (!o)\n    return;\n  if (typeof o === \"string\")\n    return _arrayLikeToArray2(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor)\n    n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\")\n    return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray2(o, minLen);\n}\nfunction _arrayLikeToArray2(arr, len) {\n  if (len == null || len > arr.length)\n    len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj2) {\n    return typeof obj2;\n  } : function(obj2) {\n    return obj2 && \"function\" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? \"symbol\" : typeof obj2;\n  }, _typeof(obj);\n}\nfunction uuid() {\n  var s = [];\n  var hexDigits = \"0123456789abcdef\";\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 16), 1);\n  }\n  s[14] = \"4\";\n  s[19] = hexDigits.substr(s[19] & 3 | 8, 1);\n  s[8] = \"-\";\n  s[13] = \"-\";\n  s[18] = \"-\";\n  s[23] = \"-\";\n  var uuid2 = s.join(\"\");\n  return uuid2;\n}\nfunction toLogString(value) {\n  if (_typeof(value) === \"object\") {\n    return JSON.stringify(value);\n  } else {\n    return value.toString();\n  }\n}\nfunction dateToStr(date) {\n  var comm = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \":\";\n  var dateStr = \"\".concat(date.getFullYear(), \"-\").concat(fn(date.getMonth() + 1), \"-\").concat(fn(date.getDate()));\n  var ms = date.getMilliseconds();\n  var msStr = ms < 100 ? \"0\".concat(fn(ms)) : ms;\n  return \"\".concat(dateStr, \" \").concat(fn(date.getHours())).concat(comm).concat(fn(date.getMinutes())).concat(comm).concat(fn(date.getSeconds())).concat(comm).concat(msStr);\n}\nfunction fn(num) {\n  return num < 10 ? \"0\".concat(num) : num;\n}\nvar DefaultKeys = [\"type\", \"msg\", \"payload\", \"uid\", \"traceid\", \"logid\", \"duration\", \"network\", \"url\", \"ua\"];\nfunction dataToLogString(data) {\n  var keys = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n  var content = \"[\".concat(data.time, \"]\");\n  var append = function append2(key2) {\n    var v = data[key2];\n    if (typeof v !== \"undefined\" && v !== \"\") {\n      content += \" \".concat(key2, \"=\").concat(toLogString(v), \";\");\n    }\n  };\n  var _iterator = _createForOfIteratorHelper(keys), _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done; ) {\n      var key = _step.value;\n      append(key);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var _iterator2 = _createForOfIteratorHelper(DefaultKeys), _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {\n      var _key = _step2.value;\n      if (!keys.includes(_key)) {\n        append(_key);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return content;\n}\n\n// src/common/base-info.ts\nfunction _typeof2(obj) {\n  \"@babel/helpers - typeof\";\n  return _typeof2 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj2) {\n    return typeof obj2;\n  } : function(obj2) {\n    return obj2 && \"function\" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? \"symbol\" : typeof obj2;\n  }, _typeof2(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor)\n      descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps)\n    _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps)\n    _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", { writable: false });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof2(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof2(input) !== \"object\" || input === null)\n    return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== void 0) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof2(res) !== \"object\")\n      return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar BaseInfo = /* @__PURE__ */ function() {\n  function BaseInfo2(_ref) {\n    var id = _ref.id, useConsole = _ref.useConsole, maxRecords = _ref.maxRecords;\n    _classCallCheck(this, BaseInfo2);\n    _defineProperty(this, \"data\", {\n      clientid: \"\",\n      uid: \"\",\n      traceid: \"\",\n      network: \"\",\n      url: \"\",\n      ua: \"\"\n    });\n    _defineProperty(this, \"config\", {\n      useConsole: true,\n      maxRecords: -1\n    });\n    this.injectConfig({\n      useConsole,\n      maxRecords\n    });\n    this.name = \"\".concat(BaseInfo2.DEFAULT_DB_NAME_PREFIX, \"_\").concat(id);\n    this.refreshTraceId();\n  }\n  _createClass(BaseInfo2, [{\n    key: \"refreshTraceId\",\n    value: function refreshTraceId() {\n      this.data.traceid = uuid();\n      this.refreshDurationStart();\n    }\n  }, {\n    key: \"refreshDurationStart\",\n    value: function refreshDurationStart() {\n      this.durationStart = Date.now();\n    }\n  }, {\n    key: \"injectBaseInfo\",\n    value: function injectBaseInfo(baseInfo) {\n      Object.assign(this.data, baseInfo);\n    }\n  }, {\n    key: \"injectConfig\",\n    value: function injectConfig(data) {\n      Object.assign(this.config, data);\n    }\n  }, {\n    key: \"appendBaseInfo\",\n    value: function appendBaseInfo(data) {\n      var date = new Date();\n      var timestamp = date.getTime();\n      var time = dateToStr(date);\n      var duration = timestamp - this.durationStart;\n      var extend = data.extend || {};\n      delete data.extend;\n      var result = Object.assign(data, this.data, {\n        timestamp,\n        time,\n        logid: uuid(),\n        duration\n      }, extend);\n      if (this.config.useConsole) {\n        var str = dataToLogString(result);\n        var fn2 = TLog[result.type] || console.log;\n        fn2(str);\n      }\n      return result;\n    }\n  }]);\n  return BaseInfo2;\n}();\n_defineProperty(BaseInfo, \"DEFAULT_DB_NAME_PREFIX\", \"tc_logger\");\n\n// src/common/db-base.ts\nfunction _typeof3(obj) {\n  \"@babel/helpers - typeof\";\n  return _typeof3 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj2) {\n    return typeof obj2;\n  } : function(obj2) {\n    return obj2 && \"function\" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? \"symbol\" : typeof obj2;\n  }, _typeof3(obj);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });\n  Object.defineProperty(subClass, \"prototype\", { writable: false });\n  if (superClass)\n    _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf3(o2, p2) {\n    o2.__proto__ = p2;\n    return o2;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived), result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof3(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct)\n    return false;\n  if (Reflect.construct.sham)\n    return false;\n  if (typeof Proxy === \"function\")\n    return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n    }));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf3(o2) {\n    return o2.__proto__ || Object.getPrototypeOf(o2);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperties2(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor)\n      descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);\n  }\n}\nfunction _createClass2(Constructor, protoProps, staticProps) {\n  if (protoProps)\n    _defineProperties2(Constructor.prototype, protoProps);\n  if (staticProps)\n    _defineProperties2(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", { writable: false });\n  return Constructor;\n}\nfunction _toPropertyKey2(arg) {\n  var key = _toPrimitive2(arg, \"string\");\n  return _typeof3(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive2(input, hint) {\n  if (_typeof3(input) !== \"object\" || input === null)\n    return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== void 0) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof3(res) !== \"object\")\n      return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _classCallCheck2(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar DBBaseMethods = /* @__PURE__ */ _createClass2(\n  function DBBaseMethods2(data) {\n    _classCallCheck2(this, DBBaseMethods2);\n    this.type = \"idb\";\n  }\n);\nvar DBBase = /* @__PURE__ */ function(_DBBaseMethods) {\n  _inherits(DBBase2, _DBBaseMethods);\n  var _super = _createSuper(DBBase2);\n  function DBBase2(data) {\n    var _this;\n    _classCallCheck2(this, DBBase2);\n    _this = _super.call(this, data);\n    _this.baseInfo = new BaseInfo(data);\n    return _this;\n  }\n  _createClass2(DBBase2, [{\n    key: \"name\",\n    get: function get() {\n      return this.baseInfo.name;\n    }\n  }, {\n    key: \"injectBaseInfo\",\n    value: function injectBaseInfo(data) {\n      this.baseInfo.injectBaseInfo(data);\n      return Promise.resolve();\n    }\n  }, {\n    key: \"refreshTraceId\",\n    value: function refreshTraceId() {\n      this.baseInfo.refreshTraceId();\n      return Promise.resolve();\n    }\n  }, {\n    key: \"refreshDurationStart\",\n    value: function refreshDurationStart() {\n      this.baseInfo.refreshDurationStart();\n      return Promise.resolve();\n    }\n  }]);\n  return DBBase2;\n}(DBBaseMethods);\n\n// src/filter-json/filter.ts\nfunction _typeof4(obj) {\n  \"@babel/helpers - typeof\";\n  return _typeof4 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj2) {\n    return typeof obj2;\n  } : function(obj2) {\n    return obj2 && \"function\" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? \"symbol\" : typeof obj2;\n  }, _typeof4(obj);\n}\nfunction checkValue(value, condition) {\n  if (typeof condition === \"function\") {\n    return condition(value);\n  } else if (_typeof4(value) === \"object\") {\n    if (value.constructor.name === \"Object\") {\n      if (condition instanceof Array) {\n        for (var i = 0; i < condition.length; i++) {\n          var filter = condition[i];\n          if (checkValue(value, filter))\n            return true;\n        }\n        return false;\n      } else {\n        for (var k in condition) {\n          var val = value[k];\n          var _filter = condition[k];\n          if (!checkValue(val, _filter))\n            return false;\n        }\n        return true;\n      }\n    } else {\n      return value.toString() === condition.toString();\n    }\n  } else {\n    if (condition instanceof RegExp) {\n      return condition.test(value);\n    }\n    return value === condition;\n  }\n}\n\n// src/filter-json/func-filter.ts\nvar FuncFilter = function() {\n  var PREFIX = \"/*fn*/\";\n  return {\n    transFunc: function transFunc(filter) {\n      if (typeof filter === \"function\") {\n        return \"/*fn*/\" + filter.toString();\n      }\n      return filter;\n    },\n    transBack: function transBack(filter) {\n      if (typeof filter === \"string\") {\n        return new Function(\"return (\".concat(filter, \")\"))();\n      }\n      return filter;\n    },\n    isFuncString: function isFuncString(str) {\n      return str.indexOf(PREFIX) === 0;\n    }\n  };\n}();\n\n// src/worker/store.ts\nfunction _typeof5(obj) {\n  \"@babel/helpers - typeof\";\n  return _typeof5 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj2) {\n    return typeof obj2;\n  } : function(obj2) {\n    return obj2 && \"function\" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? \"symbol\" : typeof obj2;\n  }, _typeof5(obj);\n}\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  _regeneratorRuntime = function _regeneratorRuntime3() {\n    return exports;\n  };\n  var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {\n    obj[key] = desc.value;\n  }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define2(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator;\n  }\n  function tryCatch(fn2, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn2.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {\n  }\n  function GeneratorFunction() {\n  }\n  function GeneratorFunctionPrototype() {\n  }\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function() {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg, value = result.value;\n        return value && \"object\" == _typeof5(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function(value2) {\n          invoke(\"next\", value2, resolve, reject);\n        }, function(err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function(unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function(error2) {\n          return invoke(\"throw\", error2, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", { value: function value(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function(method, arg) {\n      if (\"executing\" === state)\n        throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method)\n          throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg; ; ) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel)\n              continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method)\n          context.sent = context._sent = context.arg;\n        else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state)\n            throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else\n          \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel)\n            continue;\n          return { value: record.arg, done: context.done };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method, method = delegate.iterator[methodName];\n    if (void 0 === method)\n      return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = void 0, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type)\n      return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info2 = record.arg;\n    return info2 ? info2.done ? (context[delegate.resultName] = info2.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = void 0), context.delegate = null, ContinueSentinel) : info2 : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(true);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod)\n        return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next)\n        return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next2() {\n          for (; ++i < iterable.length; ) {\n            if (hasOwn.call(iterable, i))\n              return next2.value = iterable[i], next2.done = false, next2;\n          }\n          return next2.value = void 0, next2.done = true, next2;\n        };\n        return next.next = next;\n      }\n    }\n    return { next: doneResult };\n  }\n  function doneResult() {\n    return { value: void 0, done: true };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function(genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function(genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function(arg) {\n    return { __await: arg };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function() {\n    return this;\n  }), define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  }), exports.keys = function(val) {\n    var object = Object(val), keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length; ) {\n        var key2 = keys.pop();\n        if (key2 in object)\n          return next.value = key2, next.done = false, next;\n      }\n      return next.done = true, next;\n    };\n  }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) {\n    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = \"next\", this.arg = void 0, this.tryEntries.forEach(resetTryEntry), !skipTempReset)\n      for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = void 0);\n      }\n  }, stop: function stop() {\n    this.done = true;\n    var rootRecord = this.tryEntries[0].completion;\n    if (\"throw\" === rootRecord.type)\n      throw rootRecord.arg;\n    return this.rval;\n  }, dispatchException: function dispatchException(exception) {\n    if (this.done)\n      throw exception;\n    var context = this;\n    function handle(loc, caught) {\n      return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = void 0), !!caught;\n    }\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i], record = entry.completion;\n      if (\"root\" === entry.tryLoc)\n        return handle(\"end\");\n      if (entry.tryLoc <= this.prev) {\n        var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\");\n        if (hasCatch && hasFinally) {\n          if (this.prev < entry.catchLoc)\n            return handle(entry.catchLoc, true);\n          if (this.prev < entry.finallyLoc)\n            return handle(entry.finallyLoc);\n        } else if (hasCatch) {\n          if (this.prev < entry.catchLoc)\n            return handle(entry.catchLoc, true);\n        } else {\n          if (!hasFinally)\n            throw new Error(\"try statement without catch or finally\");\n          if (this.prev < entry.finallyLoc)\n            return handle(entry.finallyLoc);\n        }\n      }\n    }\n  }, abrupt: function abrupt(type, arg) {\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n        var finallyEntry = entry;\n        break;\n      }\n    }\n    finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n    var record = finallyEntry ? finallyEntry.completion : {};\n    return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n  }, complete: function complete(record, afterLoc) {\n    if (\"throw\" === record.type)\n      throw record.arg;\n    return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n  }, finish: function finish(finallyLoc) {\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      if (entry.finallyLoc === finallyLoc)\n        return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n    }\n  }, catch: function _catch(tryLoc) {\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      if (entry.tryLoc === tryLoc) {\n        var record = entry.completion;\n        if (\"throw\" === record.type) {\n          var thrown = record.arg;\n          resetTryEntry(entry);\n        }\n        return thrown;\n      }\n    }\n    throw new Error(\"illegal catch attempt\");\n  }, delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n    return this.delegate = { iterator: values(iterable), resultName, nextLoc }, \"next\" === this.method && (this.arg = void 0), ContinueSentinel;\n  } }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info2 = gen[key](arg);\n    var value = info2.value;\n  } catch (error2) {\n    reject(error2);\n    return;\n  }\n  if (info2.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn2) {\n  return function() {\n    var self = this, args = arguments;\n    return new Promise(function(resolve, reject) {\n      var gen = fn2.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(void 0);\n    });\n  };\n}\nfunction _classCallCheck3(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties3(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor)\n      descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey3(descriptor.key), descriptor);\n  }\n}\nfunction _createClass3(Constructor, protoProps, staticProps) {\n  if (protoProps)\n    _defineProperties3(Constructor.prototype, protoProps);\n  if (staticProps)\n    _defineProperties3(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", { writable: false });\n  return Constructor;\n}\nfunction _inherits2(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });\n  Object.defineProperty(subClass, \"prototype\", { writable: false });\n  if (superClass)\n    _setPrototypeOf2(subClass, superClass);\n}\nfunction _setPrototypeOf2(o, p) {\n  _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf3(o2, p2) {\n    o2.__proto__ = p2;\n    return o2;\n  };\n  return _setPrototypeOf2(o, p);\n}\nfunction _createSuper2(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct2();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf2(Derived), result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf2(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn2(this, result);\n  };\n}\nfunction _possibleConstructorReturn2(self, call) {\n  if (call && (_typeof5(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized2(self);\n}\nfunction _assertThisInitialized2(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct2() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct)\n    return false;\n  if (Reflect.construct.sham)\n    return false;\n  if (typeof Proxy === \"function\")\n    return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n    }));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf2(o) {\n  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf3(o2) {\n    return o2.__proto__ || Object.getPrototypeOf(o2);\n  };\n  return _getPrototypeOf2(o);\n}\nfunction _defineProperty2(obj, key, value) {\n  key = _toPropertyKey3(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey3(arg) {\n  var key = _toPrimitive3(arg, \"string\");\n  return _typeof5(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive3(input, hint) {\n  if (_typeof5(input) !== \"object\" || input === null)\n    return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== void 0) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof5(res) !== \"object\")\n      return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar INDEX_NAME = \"logid\";\nvar dbMap = {};\nfunction createMessageMap(db) {\n  return {\n    add: function add(data) {\n      return db.add(data);\n    },\n    injectConfig: function injectConfig(data) {\n      return db.baseInfo.injectConfig(data);\n    },\n    closeDB: function closeDB() {\n      return db.close();\n    },\n    destory: function destory() {\n      return db.destory();\n    },\n    refreshTraceId: function refreshTraceId() {\n      return db.refreshTraceId();\n    },\n    injectBaseInfo: function injectBaseInfo(data) {\n      return db.baseInfo.injectBaseInfo(data);\n    },\n    get: function get(msgid) {\n      return db.get(msgid);\n    },\n    getAll: function getAll() {\n      return db.getAll();\n    },\n    refreshDurationStart: function refreshDurationStart() {\n      return db.refreshDurationStart();\n    },\n    filter: function filter(_filter) {\n      return db.filter(_filter);\n    },\n    download: function download(data) {\n      return db.download(data);\n    },\n    count: function count() {\n      return db.count();\n    },\n    delete: function _delete(msgid) {\n      return db.delete(msgid);\n    },\n    clear: function clear() {\n      return db.clear();\n    }\n  };\n}\nvar WorkerDB = /* @__PURE__ */ function(_DBBase) {\n  _inherits2(WorkerDB2, _DBBase);\n  var _super = _createSuper2(WorkerDB2);\n  function WorkerDB2() {\n    var _this;\n    var id = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"default\";\n    _classCallCheck3(this, WorkerDB2);\n    _this = _super.call(this, {\n      id,\n      useConsole: true,\n      maxRecords: 0\n    });\n    _defineProperty2(_assertThisInitialized2(_this), \"STORE_NAME\", \"records\");\n    _defineProperty2(_assertThisInitialized2(_this), \"loadCallbacks\", []);\n    _defineProperty2(_assertThisInitialized2(_this), \"recordsChecking\", false);\n    _defineProperty2(_assertThisInitialized2(_this), \"continueChecking\", false);\n    _this.id = id;\n    if (dbMap[_this.name])\n      return _possibleConstructorReturn2(_this, dbMap[_this.name]);\n    if (!_this.db) {\n      _this._initDB();\n    }\n    dbMap[_this.name] = _assertThisInitialized2(_this);\n    _this.msgMap = createMessageMap(_assertThisInitialized2(_this));\n    return _this;\n  }\n  _createClass3(WorkerDB2, [{\n    key: \"add\",\n    value: function add(data) {\n      var _this2 = this;\n      return new Promise(/* @__PURE__ */ function() {\n        var _ref = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee2(resolve) {\n          var dbData;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (data) {\n                    _context2.next = 3;\n                    break;\n                  }\n                  TLog.warn(\"add: data is required\");\n                  return _context2.abrupt(\"return\", null);\n                case 3:\n                  dbData = _this2.baseInfo.appendBaseInfo(data);\n                  if (_this2.db) {\n                    _context2.next = 8;\n                    break;\n                  }\n                  _this2.loadCallbacks.push(/* @__PURE__ */ _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee() {\n                    return _regeneratorRuntime().wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.t0 = resolve;\n                            _context.next = 3;\n                            return _this2._addDBData(dbData);\n                          case 3:\n                            _context.t1 = _context.sent;\n                            (0, _context.t0)(_context.t1);\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  })));\n                  _context2.next = 13;\n                  break;\n                case 8:\n                  _context2.t0 = resolve;\n                  _context2.next = 11;\n                  return _this2._addDBData(dbData);\n                case 11:\n                  _context2.t1 = _context2.sent;\n                  (0, _context2.t0)(_context2.t1);\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n        return function(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"_addDBData\",\n    value: function _addDBData(dbData) {\n      var _this3 = this;\n      return new Promise(/* @__PURE__ */ function() {\n        var _ref3 = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee4(resolve) {\n          var request;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  request = _this3._getStore(\"readwrite\").add(dbData);\n                  request.onsuccess = /* @__PURE__ */ _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee3() {\n                    var discard;\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _this3._checkMaxRecords();\n                            discard = null;\n                            resolve({\n                              discard,\n                              add: dbData\n                            });\n                          case 3:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n                  request.onerror = function(event) {\n                    _this3._sendError(\"ADD_LOG_ERROR\", event);\n                    TLog.error(\"\\u6570\\u636E\\u5199\\u5165\\u5931\\u8D25\", event);\n                    resolve(null);\n                  };\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n        return function(_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"_getStore\",\n    value: function _getStore() {\n      var mode = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"readonly\";\n      return this.db.transaction([this.STORE_NAME], mode).objectStore(this.STORE_NAME);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this4 = this;\n      return new Promise(function(resolve) {\n        var objectStore = _this4._getStore(\"readwrite\");\n        var request = objectStore.clear();\n        request.onsuccess = function() {\n          TLog.log(\"\\u6E05\\u9664\\u6570\\u636E\\u6210\\u529F\");\n          resolve(true);\n        };\n        request.onerror = function(event) {\n          _this4._sendError(\"CLEAR_ERROR\", event);\n          TLog.warn(\"\\u6E05\\u9664\\u6570\\u636E\\u5931\\u8D25\");\n          resolve(false);\n        };\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.db.close();\n      this.db = void 0;\n      delete dbMap[this.name];\n      return Promise.resolve(true);\n    }\n  }, {\n    key: \"destory\",\n    value: function destory() {\n      var _this5 = this;\n      return new Promise(function(resolve) {\n        _this5.close();\n        var request = globalThis.indexedDB.deleteDatabase(_this5.baseInfo.name);\n        request.onsuccess = function() {\n          TLog.info(\"\\u6570\\u636E\\u5E93\\u5DF2\\u9500\\u6BC1\");\n          resolve(true);\n        };\n        request.onerror = function(event) {\n          _this5._sendError(\"DESTORY_ERROR\", event);\n          TLog.warn(\"\\u6570\\u636E\\u5E93\\u9500\\u6BC1\\u5931\\u8D25:\", event);\n          resolve(false);\n        };\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(logid) {\n      var _this6 = this;\n      return new Promise(function(resolve) {\n        var request = _this6._getStore(\"readonly\").index(INDEX_NAME).get(logid);\n        request.onerror = function(e) {\n          _this6._sendError(\"GET_ERROR\", e);\n          TLog.error(\"\\u6570\\u636E\\u67E5\\u8BE2\\u5931\\u8D25\", logid);\n          resolve(null);\n        };\n        request.onsuccess = function() {\n          if (request.result) {\n            resolve(request.result);\n          } else {\n            TLog.warn(\"\\u672A\\u67E5\\u8BE2\\u5230\\u8BB0\\u5F55\", logid);\n            resolve(null);\n          }\n        };\n      });\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var _this7 = this;\n      return new Promise(function(resolve) {\n        var result = [];\n        _this7._cursorBase({\n          onvalue: function onvalue(value) {\n            result.push(value);\n          },\n          onend: function onend() {\n            resolve(result);\n          },\n          onerror: function onerror() {\n            resolve([]);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"download\",\n    value: function download(_ref5) {\n      var _this8 = this;\n      var filter = _ref5.filter, _ref5$keys = _ref5.keys, keys = _ref5$keys === void 0 ? [] : _ref5$keys;\n      filter = FuncFilter.transBack(filter);\n      return new Promise(function(resolve) {\n        var content = \"\";\n        var count = 0;\n        _this8._cursorBase({\n          onvalue: function onvalue(value) {\n            if (checkValue(value, filter)) {\n              count++;\n              content += \"\".concat(dataToLogString(value, keys), \"\\\\n\");\n            }\n          },\n          onend: function onend() {\n            resolve({\n              content,\n              count\n            });\n          },\n          onerror: function onerror() {\n            resolve({\n              content,\n              count\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(_filter2) {\n      var _this9 = this;\n      _filter2 = FuncFilter.transBack(_filter2);\n      return new Promise(function(resolve) {\n        var result = [];\n        _this9._cursorBase({\n          onvalue: function onvalue(value) {\n            if (checkValue(value, _filter2)) {\n              result.push(value);\n            }\n          },\n          onend: function onend() {\n            resolve(result);\n          },\n          onerror: function onerror() {\n            resolve([]);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"count\",\n    value: function count() {\n      var _this10 = this;\n      return new Promise(function(resolve) {\n        var objectStore = _this10._getStore();\n        var index = objectStore.index(INDEX_NAME);\n        var countRequest = index.count();\n        countRequest.onsuccess = function() {\n          resolve(countRequest.result);\n        };\n        countRequest.onerror = function(e) {\n          _this10._sendError(\"COUNT_ERROR\", e);\n          TLog.warn(\"count error\", e);\n          resolve(-1);\n        };\n      });\n    }\n  }, {\n    key: \"_getKey\",\n    value: function _getKey(logid) {\n      var _this11 = this;\n      return new Promise(/* @__PURE__ */ function() {\n        var _ref6 = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee5(resolve) {\n          var objectStore, request;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  objectStore = _this11._getStore(\"readonly\");\n                  request = objectStore.index(INDEX_NAME).getKey(logid);\n                  request.onsuccess = function(event) {\n                    var _event$target;\n                    resolve((event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result) || -1);\n                  };\n                  request.onerror = function(event) {\n                    _this11._sendError(\"GET_KEY_ERROR\", event);\n                    TLog.warn(\"getKey error\", event);\n                    resolve(-1);\n                  };\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n        return function(_x3) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(logid) {\n      var _this12 = this;\n      return new Promise(/* @__PURE__ */ function() {\n        var _ref7 = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee6(resolve) {\n          var key, objectStore, request;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return _this12._getKey(logid);\n                case 2:\n                  key = _context6.sent;\n                  if (!(key === -1)) {\n                    _context6.next = 7;\n                    break;\n                  }\n                  TLog.warn(\"\\u5220\\u9664\\u5931\\u8D25, \\u8BB0\\u5F55\\u4E0D\\u5B58\\u5728\\uFF1A\", logid);\n                  resolve(false);\n                  return _context6.abrupt(\"return\");\n                case 7:\n                  objectStore = _this12._getStore(\"readwrite\");\n                  request = objectStore.delete(key);\n                  request.onsuccess = function() {\n                    resolve(true);\n                  };\n                  request.onerror = function(event) {\n                    _this12._sendError(\"DELETE_ERROR\", event);\n                    TLog.warn(\"\\u5220\\u9664\\u65E5\\u5FD7\\u5931\\u8D25\", event);\n                    resolve(false);\n                  };\n                case 11:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n        return function(_x4) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"_sendError\",\n    value: function _sendError(message) {\n      var error2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n      var code = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;\n      sendMessage({\n        id: this.id,\n        msgid: \"\",\n        type: \"error\",\n        result: {\n          message,\n          error: error2,\n          code\n        }\n      });\n    }\n  }, {\n    key: \"_removeFirst\",\n    value: function _removeFirst() {\n      var _this13 = this;\n      var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;\n      return new Promise(function(resolve) {\n        var objectStore = _this13._getStore(\"readwrite\");\n        var cursorObject = objectStore.openKeyCursor();\n        cursorObject.onsuccess = function(event) {\n          var cursor = (event === null || event === void 0 ? void 0 : event.target).result;\n          if (cursor) {\n            objectStore.get(cursor.primaryKey).onsuccess = function(e) {\n              var result = e.target.result;\n              sendMessage({\n                id: _this13.id,\n                msgid: \"\",\n                type: \"discard\",\n                result\n              });\n            };\n            objectStore.delete(cursor.primaryKey).onerror = function(event2) {\n              _this13._sendError(\"DISCARD_ERROR\", event2);\n              TLog.warn(\"\\u79FB\\u9664\\u6700\\u65E9\\u8BB0\\u5F55\\u9519\\u8BEF\", event2);\n            };\n            if (n > 1) {\n              cursor.continue();\n              n--;\n            }\n            resolve(null);\n          } else {\n            _this13._sendError(\"DISCARD_NOT_FOUND\", null);\n            TLog.warn(\"\\u79FB\\u9664\\u6700\\u65E9\\u8BB0\\u5F55\\u5931\\u8D25, cursor = null\", event);\n            resolve(null);\n          }\n        };\n        cursorObject.onerror = function(event) {\n          _this13._sendError(\"DISCARD_OPEN_CURSOR_ERROR\", event);\n          TLog.warn(\"\\u79FB\\u9664\\u6700\\u65E9\\u8BB0\\u5F55\\u5931\\u8D25\", event);\n          resolve(null);\n        };\n      });\n    }\n  }, {\n    key: \"_checkMaxRecords\",\n    value: function() {\n      var _checkMaxRecords2 = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee7() {\n        var total, n;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!this.recordsChecking) {\n                  _context7.next = 3;\n                  break;\n                }\n                this.continueChecking = true;\n                return _context7.abrupt(\"return\");\n              case 3:\n                this.continueChecking = false;\n                this.recordsChecking = true;\n                _context7.next = 7;\n                return this.count();\n              case 7:\n                total = _context7.sent;\n                n = total - this.baseInfo.config.maxRecords;\n                if (!(n > 0)) {\n                  _context7.next = 12;\n                  break;\n                }\n                _context7.next = 12;\n                return this._removeFirst(n);\n              case 12:\n                this.recordsChecking = false;\n                if (this.continueChecking) {\n                  this._checkMaxRecords();\n                }\n              case 14:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function _checkMaxRecords() {\n        return _checkMaxRecords2.apply(this, arguments);\n      }\n      return _checkMaxRecords;\n    }()\n  }, {\n    key: \"_cursorBase\",\n    value: function _cursorBase(_ref8) {\n      var _this14 = this;\n      var onend = _ref8.onend, onvalue = _ref8.onvalue, onerror = _ref8.onerror;\n      var objectStore = this._getStore();\n      var cursorObject = objectStore.openCursor();\n      cursorObject.onsuccess = function(event) {\n        var cursor = (event === null || event === void 0 ? void 0 : event.target).result;\n        if (cursor) {\n          onvalue(cursor.value);\n          cursor.continue();\n        } else {\n          onend();\n        }\n      };\n      cursorObject.onerror = function(event) {\n        _this14._sendError(\"QUERY_ERROR\", event);\n        TLog.error(\"\\u67E5\\u8BE2\\u5931\\u8D25\");\n        onerror();\n      };\n    }\n  }, {\n    key: \"_initDB\",\n    value: function _initDB() {\n      var _this15 = this;\n      var request = globalThis.indexedDB.open(this.name, 1);\n      request.onerror = function(event) {\n        _this15._sendError(\"INIT_DB_ERROR\", event);\n        TLog.error(\"\\u6570\\u636E\\u5E93\\u6253\\u5F00\\u5931\\u8D25\", event);\n      };\n      request.onsuccess = function() {\n        _this15.db = request.result;\n        _this15.loadCallbacks.forEach(function(fn2) {\n          return fn2();\n        });\n      };\n      request.onupgradeneeded = function(event) {\n        var _event$target2;\n        var db = (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.result;\n        _this15._checkCreateStore(db, _this15.STORE_NAME);\n      };\n    }\n  }, {\n    key: \"_checkCreateStore\",\n    value: function _checkCreateStore(db, id) {\n      if (!db.objectStoreNames.contains(id)) {\n        var store = db.createObjectStore(id, {\n          autoIncrement: true\n        });\n        store.createIndex(INDEX_NAME, INDEX_NAME, {\n          unique: true\n        });\n      }\n    }\n  }]);\n  return WorkerDB2;\n}(DBBase);\nfunction sendMessage(data) {\n  globalThis.postMessage(data);\n}\n\n// src/worker/index.ts\nfunction _typeof6(obj) {\n  \"@babel/helpers - typeof\";\n  return _typeof6 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj2) {\n    return typeof obj2;\n  } : function(obj2) {\n    return obj2 && \"function\" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? \"symbol\" : typeof obj2;\n  }, _typeof6(obj);\n}\nfunction _regeneratorRuntime2() {\n  \"use strict\";\n  _regeneratorRuntime2 = function _regeneratorRuntime3() {\n    return exports;\n  };\n  var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {\n    obj[key] = desc.value;\n  }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define2(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator;\n  }\n  function tryCatch(fn2, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn2.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {\n  }\n  function GeneratorFunction() {\n  }\n  function GeneratorFunctionPrototype() {\n  }\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function() {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg, value = result.value;\n        return value && \"object\" == _typeof6(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function(value2) {\n          invoke(\"next\", value2, resolve, reject);\n        }, function(err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function(unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function(error2) {\n          return invoke(\"throw\", error2, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", { value: function value(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function(method, arg) {\n      if (\"executing\" === state)\n        throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method)\n          throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg; ; ) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel)\n              continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method)\n          context.sent = context._sent = context.arg;\n        else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state)\n            throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else\n          \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel)\n            continue;\n          return { value: record.arg, done: context.done };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method, method = delegate.iterator[methodName];\n    if (void 0 === method)\n      return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = void 0, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type)\n      return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info2 = record.arg;\n    return info2 ? info2.done ? (context[delegate.resultName] = info2.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = void 0), context.delegate = null, ContinueSentinel) : info2 : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(true);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod)\n        return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next)\n        return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next2() {\n          for (; ++i < iterable.length; ) {\n            if (hasOwn.call(iterable, i))\n              return next2.value = iterable[i], next2.done = false, next2;\n          }\n          return next2.value = void 0, next2.done = true, next2;\n        };\n        return next.next = next;\n      }\n    }\n    return { next: doneResult };\n  }\n  function doneResult() {\n    return { value: void 0, done: true };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: true }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function(genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function(genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function(arg) {\n    return { __await: arg };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function() {\n    return this;\n  }), define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  }), exports.keys = function(val) {\n    var object = Object(val), keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length; ) {\n        var key2 = keys.pop();\n        if (key2 in object)\n          return next.value = key2, next.done = false, next;\n      }\n      return next.done = true, next;\n    };\n  }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) {\n    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = \"next\", this.arg = void 0, this.tryEntries.forEach(resetTryEntry), !skipTempReset)\n      for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = void 0);\n      }\n  }, stop: function stop() {\n    this.done = true;\n    var rootRecord = this.tryEntries[0].completion;\n    if (\"throw\" === rootRecord.type)\n      throw rootRecord.arg;\n    return this.rval;\n  }, dispatchException: function dispatchException(exception) {\n    if (this.done)\n      throw exception;\n    var context = this;\n    function handle(loc, caught) {\n      return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = void 0), !!caught;\n    }\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i], record = entry.completion;\n      if (\"root\" === entry.tryLoc)\n        return handle(\"end\");\n      if (entry.tryLoc <= this.prev) {\n        var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\");\n        if (hasCatch && hasFinally) {\n          if (this.prev < entry.catchLoc)\n            return handle(entry.catchLoc, true);\n          if (this.prev < entry.finallyLoc)\n            return handle(entry.finallyLoc);\n        } else if (hasCatch) {\n          if (this.prev < entry.catchLoc)\n            return handle(entry.catchLoc, true);\n        } else {\n          if (!hasFinally)\n            throw new Error(\"try statement without catch or finally\");\n          if (this.prev < entry.finallyLoc)\n            return handle(entry.finallyLoc);\n        }\n      }\n    }\n  }, abrupt: function abrupt(type, arg) {\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n        var finallyEntry = entry;\n        break;\n      }\n    }\n    finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n    var record = finallyEntry ? finallyEntry.completion : {};\n    return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n  }, complete: function complete(record, afterLoc) {\n    if (\"throw\" === record.type)\n      throw record.arg;\n    return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n  }, finish: function finish(finallyLoc) {\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      if (entry.finallyLoc === finallyLoc)\n        return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n    }\n  }, catch: function _catch(tryLoc) {\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      if (entry.tryLoc === tryLoc) {\n        var record = entry.completion;\n        if (\"throw\" === record.type) {\n          var thrown = record.arg;\n          resetTryEntry(entry);\n        }\n        return thrown;\n      }\n    }\n    throw new Error(\"illegal catch attempt\");\n  }, delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n    return this.delegate = { iterator: values(iterable), resultName, nextLoc }, \"next\" === this.method && (this.arg = void 0), ContinueSentinel;\n  } }, exports;\n}\nfunction asyncGeneratorStep2(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info2 = gen[key](arg);\n    var value = info2.value;\n  } catch (error2) {\n    reject(error2);\n    return;\n  }\n  if (info2.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator2(fn2) {\n  return function() {\n    var self = this, args = arguments;\n    return new Promise(function(resolve, reject) {\n      var gen = fn2.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(void 0);\n    });\n  };\n}\nfunction main() {\n  globalThis.addEventListener(\"message\", /* @__PURE__ */ function() {\n    var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(e) {\n      var _e$data, msgid, type, data, _e$data$id, id, db, result;\n      return _regeneratorRuntime2().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _e$data = e.data, msgid = _e$data.msgid, type = _e$data.type, data = _e$data.data, _e$data$id = _e$data.id, id = _e$data$id === void 0 ? \"\" : _e$data$id;\n              db = new WorkerDB(id);\n              result = db.msgMap[type](data);\n              if (!(result instanceof Promise)) {\n                _context.next = 7;\n                break;\n              }\n              _context.next = 6;\n              return result;\n            case 6:\n              result = _context.sent;\n            case 7:\n              sendMessage({\n                msgid,\n                id,\n                type,\n                result\n              });\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), false);\n}\nmain();\nvar worker_default = \"\";\n/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n`;", "/*\n * @Author: tackchen\n * @Date: 2022-07-30 19:43:09\n * @Description: Coding something\n */\n\nexport const FuncFilter = (() => {\n  const PREFIX = '/*fn*/';\n\n  return {\n    transFunc (filter?: any) {\n      if (typeof filter === 'function') {\n        return '/*fn*/' + filter.toString();\n      }\n      return filter;\n    },\n    \n    transBack (filter: any) {\n      if (typeof filter === 'string') {\n        return (new Function(`return (${filter})`))();\n      }\n      return filter;\n    },\n    isFuncString (str: string): boolean {\n      return str.indexOf(PREFIX) === 0;\n    }\n  };\n})();", "/*\n * @Author: tackchen\n * @Date: 2022-07-30 13:28:38\n * @Description: Coding something\n */\nimport {DBBaseMethods, IAddReturn, IDownloadInfo, TFilterOption} from '../common/db-base';\nimport {codeToBlob, transformDOM} from '../common/utils';\nimport {IBaseInfoOption, IBaseInfoParam, IDownloadOptions, IJson, ILogDBData, IMessageData, IWorkerBackMessage, TWorkerType} from '../type';\nimport WorkerCode from '../worker/dist/worker.min';\nimport {FuncFilter} from '../filter-json/func-filter';\n\nlet msgid = 0;\nlet worker: Worker;\n    \nif (typeof window !== 'undefined' && window.Worker) {\n  worker = new window.Worker(codeToBlob(WorkerCode as any)); // \u4F7F\u7528 blob\u5BF9\u8C61\u7684url\n}\n \nexport class WorkerStore extends DBBaseMethods {\n  id: string;\n  resolveMap: IJson<Function> = {};\n  constructor ({\n    id,\n    useConsole,\n    maxRecords,\n    onReport,\n    onDiscard,\n    onError,\n  }: IBaseInfoParam) {\n    super({\n      id,\n      useConsole,\n      maxRecords,\n    });\n    this.onDiscard = onDiscard;\n    this.onReport = onReport;\n    this.onError = onError;\n\n    this.id = id;\n    if (!worker) {\n      worker = new window.Worker(codeToBlob(WorkerCode as any)); // \u4F7F\u7528 blob\u5BF9\u8C61\u7684url\n    }\n    worker.onmessage = ({data}: {data: IWorkerBackMessage}) => {\n      if (data.id === id) {\n        this._onMessage(data);\n      }\n    };\n    this._postMessage('injectConfig', {\n      useConsole,\n      maxRecords\n    });\n  }\n\n  private _onMessage (data: IWorkerBackMessage) {\n    if (data.type === 'add') {\n      const result = data.result;\n      if (result) {\n        if (result.discard) {\n          if (this.onReport) this.onReport(result?.add as ILogDBData);\n          // ! \u7531\u4E8E\u91C7\u7528\u4E86\u5F02\u6B65\u63D2\u5165\u65E5\u5FD7 \u6B64\u5904 discard \u5C06\u6C38\u8FDC\u8FD4\u56DEnull\n          // if (this.onDiscard) this.onDiscard(result?.discard as ILogDBData);\n        } else {\n          if (this.onReport) { this.onReport(result as ILogDBData);}\n        }\n      }\n    } else if (data.type === 'discard') {\n      if (this.onDiscard) this.onDiscard(data.result as ILogDBData);\n    } else if (data.type === 'error') {\n      if (this.onError) this.onError(data.result);\n    }\n    if (data.msgid) {\n      const resolve = this.resolveMap[data.msgid];\n      if (resolve) {\n        resolve(data);\n        delete this.resolveMap[data.msgid];\n      }\n    }\n  }\n\n  injectBaseInfo (baseInfo: IBaseInfoOption) {\n    return this._postMessage('injectBaseInfo', baseInfo);\n  }\n\n  async add (data: IMessageData): Promise<IAddReturn> {\n    return (await this._postMessage('add', this._transformPayload(data))).result;\n  }\n  close () {\n    return this._postMessage('closeDB');\n  }\n  destory () {\n    return this._postMessage('destory');\n  }\n\n  async count (): Promise<number> {\n    return (await this._postMessage('count')).result;\n  }\n  clear () {\n    return this._postMessage('clear');\n  }\n  delete (logid: string) {\n    return this._postMessage('delete', logid);\n  }\n\n  refreshTraceId () {\n    return this._postMessage('refreshTraceId');\n  }\n\n  refreshDurationStart () {\n    return this._postMessage('refreshDurationStart');\n  }\n\n  async get (logid: string): Promise<ILogDBData> {\n    return (await this._postMessage('get', logid)).result;\n  }\n\n  async getAll (): Promise<ILogDBData[]> {\n    return (await this._postMessage('getAll')).result;\n  }\n\n  async download ({filter, keys}: IDownloadOptions): Promise<IDownloadInfo> {\n    return (await this._postMessage('download', {\n      filter: FuncFilter.transFunc(filter),\n      keys,\n    })).result;\n  }\n\n  async filter (filter?: TFilterOption): Promise<ILogDBData[]> {\n    return (await this._postMessage('filter', FuncFilter.transFunc(filter))).result;\n  }\n\n  protected _postMessage (type: TWorkerType, data: any = null): Promise<any> {\n    return new Promise(resolve => {\n      const message = {\n        msgid: msgid++,\n        type,\n        id: this.id,\n        data\n      };\n      this.resolveMap[message.msgid] = resolve;\n      worker.postMessage(message);\n    });\n  }\n\n  private _transformPayload (data: IMessageData) {\n    if (data.payload instanceof window.HTMLElement) {\n      data.payload = transformDOM(data.payload);\n    }\n    return data;\n  }\n\n}", "/*\n * @Author: tackchen\n * @Date: 2022-07-30 18:08:43\n * @Description: Coding something\n */\n\nimport {IJson} from '../type';\n\nexport type filterAnd = Record<string, string | RegExp | Function>;\n\nexport type filterOr = filterAnd[];\n\nexport type filterMethod = (data: IJson) => boolean;\n\nexport type filterOption = filterAnd | filterMethod | filterOr;\n\nexport function checkValue (\n  value: any,\n  condition: any,\n): boolean {\n  if (typeof condition === 'function') {\n    return condition(value);\n  } else if (typeof value === 'object') {\n    if (value.constructor.name === 'Object') {\n      if (condition instanceof Array) {\n        for (let i = 0; i < condition.length; i++) {\n          const filter = condition[i];\n          if (checkValue(value, filter)) return true;\n        }\n        return false;\n      } else {\n        for (const k in condition) {\n          const val = value[k];\n          const filter = condition[k];\n          if (!checkValue(val, filter)) return false;\n        }\n        return true;\n      }\n    } else {\n      return value.toString() === condition.toString();\n    }\n  } else {\n    if (condition instanceof RegExp) {\n      return condition.test(value);\n    }\n    return value === condition;\n  }\n}\n\nexport function filterJsonArray (\n  data: IJson[],\n  condition: filterOption\n) {\n  const result: IJson[] = [];\n  // \u6BD4filter\u65B9\u6CD5\u6027\u80FD\u597D\n  for (let i = 0; i < data.length; i++) {\n    if (checkValue(data[i], condition)) {\n      result.push(data[i]);\n    }\n  }\n  return result;\n}", "\n/*\n * @Author: tackchen\n * @Date: 2022-07-30 13:03:49\n * @Description: Coding something\n */\nimport {BaseInfo} from '../common/base-info';\nimport {DBBase, TFilterOption} from '../common/db-base';\nimport {dataToLogString} from '../common/utils';\nimport {TLog} from '../common/t-log';\nimport {checkValue} from '../filter-json/filter';\nimport {IBaseInfoParam, IDownloadOptions, ILogDBData, IMessageData, TLogStoreType} from '../type';\n\nexport class StorageStore extends DBBase {\n\n  key: string;\n \n  data: ILogDBData[] = [];\n\n  get useStorage (): boolean {\n    return this.type === 'storage';\n  }\n  get useTemp (): boolean {\n    return this.type === 'temp';\n  }\n  get noStore (): boolean {\n    return this.type === 'none';\n  }\n    \n  constructor (data: IBaseInfoParam & {storeType: TLogStoreType}) {\n    super(data);\n    this.key = `${BaseInfo.DEFAULT_DB_NAME_PREFIX}_${data.id}`;\n    this.onDiscard = data.onDiscard;\n    this.onReport = data.onReport;\n    this.onError = data.onError;\n    this._initStoreType(data.storeType);\n    this.data = this._getAll();\n  }\n\n  private _initStoreType (storeType: TLogStoreType) {\n    if (!window.localStorage && storeType === 'storage') {\n      storeType = 'temp';\n    }\n    this.type = storeType;\n  }\n\n  private _getAll () {\n    if (this.useStorage) {\n      return JSON.parse(localStorage.getItem(this.key) || '[]');\n    } else {\n      return [];\n    }\n  }\n\n  private _saveAll () {\n    if (this.useStorage) {\n      try {\n        localStorage.setItem(this.key, JSON.stringify(this.data));\n      } catch (e) {\n        TLog.warn('localStorage \u5B58\u50A8\u5931\u8D25', e);\n      }\n    }\n  }\n\n  add (data: IMessageData) {\n    const dbData = this.baseInfo.appendBaseInfo(data);\n    let discard: ILogDBData | null = null;\n    if (this.useTemp || this.useStorage) {\n      const max = this.baseInfo.config.maxRecords;\n      if (this.data.length >= max) {\n        const item = this.data.shift();\n        if (item) {\n          discard = item;\n          if (this.onDiscard) this.onDiscard(dbData);\n          TLog.warn(`\u8FBE\u5230\u6700\u5927\u5B58\u50A8\u6570\u91CF\uFF1A${max}; \u5DF2\u4E22\u5F03\u6700\u65E9\u7684\u8BB0\u5F55\uFF1A`, item);\n        }\n      }\n      if (this.onReport) this.onReport(dbData);\n      this.data.push(dbData);\n      this._saveAll();\n    }\n    // ! \u4E3A\u4E86\u5BF9\u9F50worder-store\n    return Promise.resolve({\n      discard,\n      add: dbData\n    });\n  }\n  close () {\n    return Promise.resolve(true);\n  }\n  destory () {\n    this.data = [];\n    localStorage.removeItem(this.key);\n    return Promise.resolve(true);\n  }\n  get (logid: string) : Promise<ILogDBData|null> {\n    return Promise.resolve(this.data.find(d => d.logid === logid) || null);\n  }\n\n  clear () {\n    this.data = [];\n    this._saveAll();\n    return Promise.resolve(true);\n  }\n  delete (logid: string) {\n    const index = this.data.findIndex(item => item.logid === logid);\n\n    if (index === -1) return Promise.resolve(false);\n    this.data.splice(index, 1);\n    this._saveAll();\n    return Promise.resolve(true);\n  }\n  count () {\n    return Promise.resolve(this.data.length);\n  }\n\n  download ({filter, keys}: IDownloadOptions) {\n    let content = '';\n    let count = 0;\n    for (let i = 0; i < this.data.length; i++) {\n      const item = this.data[i];\n      if (checkValue(item, filter)) {\n        count ++;\n        content += (dataToLogString(item, keys) + '\\n');\n      }\n    }\n    return Promise.resolve({content, count});\n  }\n  filter (filter?: TFilterOption | string): Promise<ILogDBData[]> {\n    if (this.noStore) return Promise.resolve([]);\n\n    return Promise.resolve(this.data.filter(d => {\n      return checkValue(d, filter);\n    }));\n  }\n  getAll (): Promise<ILogDBData[]> {\n    if (this.noStore) return Promise.resolve([]);\n    return Promise.resolve(this.data);\n  }\n}", "export default '0.0.4';\n", "/*\n * @Author: tackchen\n * @Date: 2022-07-24 15:52:13\n * @Description: Coding something\n */\nimport {\n  IJson, IBaseInfoOption, IMessageData, TLogType,\n  IBaseInfoParam, IStoreConfig, TLogStoreType, IDownloadOptions\n} from './type';\nimport {dateToStr, download, isJson, uuid} from './common/utils';\nimport {\n  ILoggerOption,\n} from './type';\nimport {DBBaseMethods, TFilterOption} from './common/db-base';\nimport {WorkerStore} from './store/worker-store';\nimport {StorageStore} from './store/storage';\nimport version from './version';\n\nclass Logger {\n  static version: string = version;\n  private _store: DBBaseMethods;\n  id: string;\n  storeType: TLogStoreType;\n\n  constructor ({\n    id = 'default',\n    useConsole = true,\n    storeType = 'idb',\n    maxRecords = 10000,\n    baseInfo,\n    onReport,\n    onDiscard,\n  }: ILoggerOption = {}) {\n        \n    this._store = LoggerHelper.initStore({\n      id,\n      storeType,\n      maxRecords,\n      useConsole,\n      onReport,\n      onDiscard,\n    });\n\n    this.storeType = this._store.type;\n\n    this.id = id;\n    this.injectBaseInfo(baseInfo);\n  }\n\n  injectBaseInfo (baseInfo: IBaseInfoOption & IJson = {}) {\n    baseInfo.uid = LoggerHelper.initUUid('_tc_logger_uid', baseInfo?.uid);\n    baseInfo.clientid = LoggerHelper.initUUid('_tc_logger_clientid', baseInfo?.clientid);\n    baseInfo.url = baseInfo.url || window.location.href;\n    baseInfo.ua = baseInfo.ua || window.navigator.userAgent;\n    return this._store.injectBaseInfo(baseInfo);\n  }\n\n  log (...args: any[]) {\n    return this._logCommon(args, 'log');\n  }\n  error (...args: any[]) {\n    return this._logCommon(args, 'error');\n  }\n  warn (...args: any[]) {\n    return this._logCommon(args, 'warn');\n  }\n  info (...args: any[]) {\n    return this._logCommon(args, 'info');\n  }\n  private _logCommon (args: any[], type: TLogType) {\n    const data = LoggerHelper.buildLogData(args, type);\n    return this._store.add(data);\n  }\n  close () {\n    return this._store.close();\n  }\n  destory () {\n    return this._store.destory();\n  }\n  clear () {\n    return this._store.clear();\n  }\n  count () {\n    return this._store.count();\n  }\n  delete (logid: string) {\n    return this._store.delete(logid);\n  }\n\n  refreshTraceId () {\n    return this._store.refreshTraceId();\n  }\n\n  refreshDurationStart () {\n    return this._store.refreshDurationStart();\n  }\n\n  // \u4E0B\u8F7D\u65E5\u5FD7\n  async download ({\n    name, filter, keys\n  }: IDownloadOptions = {}) {\n\n    if (!name) name = dateToStr(new Date(), '_');\n        \n    const {content, count} = await this._store.download({filter, keys});\n\n    download({name: `${name}.log`, content});\n    return count;\n  }\n\n  get (logid: string) {\n    return this._store.get(logid);\n  }\n\n  getAll () {\n    return this._store.getAll();\n  }\n\n\n  filter (filter?: TFilterOption) {\n    if (!filter) {\n      return this.getAll();\n    }\n    return this._store.filter(filter);\n  }\n}\n\nconst LoggerHelper = {\n  buildLogData (args: any[], type: TLogType = 'log'): IMessageData {\n    let msg = '__def__';\n    let payload: any = args;\n    let extend: IJson | undefined = undefined;\n    const arg1 = args[0];\n    const arg1Type = typeof arg1;\n    if (arg1Type === 'string' || arg1Type === 'number') {\n      msg = `${arg1}`;\n      payload = args.slice(1);\n    } else if (args.length === 1 && isJson(arg1) ) {\n      extend = arg1;\n      payload = [];\n    }\n    const data: IMessageData = {\n      msg,\n      type,\n      extend\n    };\n    if (payload.length > 0) {\n      data.payload = payload;\n    }\n    return data;\n  },\n  initUUid (key: string, id?: string): string {\n    if (id) {\n      window.localStorage.setItem(key, id);\n      return id;\n    } else {\n      let id = window.localStorage.getItem(key);\n      if (!id) {\n        id = uuid();\n        window.localStorage.setItem(key, id);\n      }\n      return id;\n    }\n  },\n  initStore ({\n    id,\n    storeType,\n    maxRecords,\n    useConsole,\n    onReport,\n    onDiscard,\n  }: IStoreConfig) {\n    const canUseIndexedDB = !!window.Worker && !!window.indexedDB;\n    const options: IBaseInfoParam = {id, useConsole, maxRecords, onReport, onDiscard};\n        \n    if (storeType === 'idb' && canUseIndexedDB) {\n      return new WorkerStore(options);\n    } else {\n      return new StorageStore({\n        ...options,\n        storeType\n      });\n    }\n  }\n};\n\nexport default Logger;", "\n/*\n * @Author: tackchen\n * @Date: 2021-01-12 18:50:34\n * @Description: Coding something\n */\nimport Logger from './logger';\n\nexport default Logger;", "/*\n * @Author: tackchen\n * @Date: 2022-08-03 20:32:39\n * @Description: Coding something\n */\n\nimport Logger from '../../src/index';\n// import Logger from '../../npm';\n\nconst win = window as any;\n\nwin.lg = new Logger({\n  id: 'main',\n  storeType: 'idb',\n  onReport (d) {\n    console.warn('onReport', d);\n  },\n  onDiscard (d) {\n    console.warn('onDiscard', d);\n  },\n  maxRecords: 10,\n});\n\nwin.lg2 = new Logger({\n  id: 'main',\n  storeType: 'storage',\n  onReport (d) {\n    console.warn('onReport', d);\n  },\n  onDiscard (d) {\n    console.warn('onDiscard', d);\n  },\n  maxRecords: 5,\n});"],
  "mappings": "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",
  "names": ["uuid", "fn", "id"]
}
